@startuml Deployment Diagram - Client + Database Architecture

!theme plain
skinparam componentStyle rectangle
skinparam packageStyle rectangle

' Optimized for 4096px limit
skinparam dpi 72
skinparam scale 0.3
skinparam componentFontSize 7
skinparam componentFontStyle normal
skinparam componentBackgroundColor #E3F2FD
skinparam componentBorderColor #1976D2
skinparam componentBorderThickness 1
skinparam packageBackgroundColor #F3E5F5
skinparam packageBorderColor #7B1FA2
skinparam packageBorderThickness 1
skinparam databaseBackgroundColor #E8F5E8
skinparam databaseBorderColor #388E3C
skinparam databaseBorderThickness 1
skinparam noteBackgroundColor #FFF3CD
skinparam noteBorderColor #856404
skinparam noteBorderThickness 1
skinparam arrowColor #333333
skinparam arrowThickness 1

package "Client Tier" {
    [Web Browser] as Browser
    [Mobile App] as Mobile
    [Partner API Client] as PartnerClient
}

package "Application Tier" {
    [Flask Web App] as Flask
    [Quality Tactics Manager] as QTM
    
    package "Availability Tactics" {
        [Circuit Breaker] as CB
        [Graceful Degradation] as GD
        [Retry Manager] as Retry
    }
    
    package "Security Tactics" {
        [Auth Manager] as Auth
        [Input Validator] as Validator
    }
    
    package "Performance Tactics" {
        [Throttling Manager] as Throttle
        [Order Queue Manager] as Queue
        [Concurrency Manager] as Concurrency
    }
    
    package "Business Services" {
        [Flash Sale Service] as FlashSale
        [Partner Catalog Service] as PartnerCatalog
    }
}

package "Data Tier" {
    database "PostgreSQL Database" as DB {
        [Core Tables] as CoreTables
        [Quality Tactics Tables] as TacticTables
        [Flash Sale Tables] as FlashTables
        [Partner Tables] as PartnerTables
    }
}

package "External Services" {
    [Payment Gateway] as PaymentGateway
    [Partner APIs] as PartnerAPIs
}

' Client connections
Browser --> Flask : HTTP/HTTPS
Mobile --> Flask : REST API
PartnerClient --> Flask : API Auth

' Application tier connections
Flask --> QTM : Quality Tactics
Flask --> FlashSale : Business Logic
Flask --> PartnerCatalog : Business Logic

' Quality tactics connections
QTM --> CB : Circuit Breaker
QTM --> GD : Graceful Degradation
QTM --> Retry : Retry Logic
QTM --> Auth : Authentication
QTM --> Validator : Input Validation
QTM --> Throttle : Rate Limiting
QTM --> Queue : Order Queuing
QTM --> Concurrency : Concurrency Control

' Database connections
Flask --> CoreTables : User, Product, Sale
CB --> TacticTables : CircuitBreakerState
Queue --> TacticTables : OrderQueue
Auth --> TacticTables : AuditLog
FlashSale --> FlashTables : FlashSale, Reservation
PartnerCatalog --> PartnerTables : Partner, APIKey

' External service connections
FlashSale --> PaymentGateway : Payment Processing
PartnerCatalog --> PartnerAPIs : Data Sync

note right of Flask
  Flask Web Application
  - Handles HTTP requests
  - Manages user sessions
  - Coordinates quality tactics
end note

note right of QTM
  Quality Tactics Manager
  - Central coordinator
  - Implements 14+ tactics
  - Provides unified interface
end note

note right of DB
  PostgreSQL Database
  - ACID compliant transactions
  - Supports all quality tactics
  - Stores business data
end note

@enduml
