@startuml System Sequence Diagram - Successful Sale Registration

!theme plain
skinparam sequenceMessageAlign center
skinparam sequenceArrowThickness 1
skinparam roundcorner 10
skinparam maxmessagesize 40

' Optimized for 4096px limit
skinparam dpi 72
skinparam scale 0.4
skinparam participantFontSize 8
skinparam participantFontStyle normal
skinparam participantBackgroundColor #E3F2FD
skinparam participantBorderColor #1976D2
skinparam participantBorderThickness 1
skinparam messageFontSize 7
skinparam messageFontStyle normal
skinparam messageColor #333333
skinparam noteBackgroundColor #FFF3CD
skinparam noteBorderColor #856404
skinparam noteBorderThickness 1
skinparam actorBackgroundColor #FFEBEE
skinparam actorBorderColor #D32F2F
skinparam actorBorderThickness 1

actor "Customer" as Customer
participant "Browser" as Browser
participant "Flask App" as Flask
participant "Quality Manager" as QTM
participant "Circuit Breaker" as CB
participant "Database" as DB

Customer -> Browser: Navigate to checkout
Browser -> Flask: GET /checkout
Flask -> QTM: get_quality_manager()
QTM --> Flask: Manager instance
Flask --> Browser: Render checkout page

Customer -> Browser: Submit payment
Browser -> Flask: POST /process_payment

note over Flask: Security & Performance
Flask -> QTM: authenticate_user(session)
QTM -> DB: query User table
DB --> QTM: user data
QTM --> Flask: authenticated

Flask -> QTM: throttle_request(user_id)
QTM --> Flask: request allowed

note over Flask: Circuit Breaker Protection
Flask -> QTM: execute_with_circuit_breaker(payment_func)
QTM -> CB: execute(payment_func)
CB -> DB: query CircuitBreakerState
DB --> CB: circuit state
CB -> CB: process_payment()
CB --> QTM: payment successful
QTM --> Flask: payment processed

note over Flask: Transaction Processing
Flask -> DB: UPDATE Product SET stock = stock - quantity
DB --> Flask: stock updated
Flask -> DB: INSERT INTO Sale
DB --> Flask: sale created
Flask -> DB: INSERT INTO Payment
DB --> Flask: payment recorded

Flask --> Browser: JSON {success: true, sale_id: 123}
Browser --> Customer: Display success message

@enduml
