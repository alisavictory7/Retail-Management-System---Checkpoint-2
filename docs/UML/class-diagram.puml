@startuml Class Diagram - Core Structure

!theme plain
skinparam classAttributeIconSize 0

' Optimized for 4096px limit
skinparam dpi 72
skinparam scale 0.25
skinparam classFontSize 6
skinparam classFontStyle normal
skinparam classBackgroundColor #FFFFFF
skinparam classBorderColor #333333
skinparam classBorderThickness 1
skinparam packageBackgroundColor #F8F9FA
skinparam packageBorderColor #6C757D
skinparam packageBorderThickness 1
skinparam arrowColor #333333
skinparam arrowThickness 1
skinparam noteBackgroundColor #FFF3CD
skinparam noteBorderColor #856404
skinparam noteBorderThickness 1
skinparam maxMessageSize 30

' Core Domain Models
class User {
    - userID: Integer
    - username: String
    - email: String
    + sales: List<Sale>
}

class Product {
    - productID: Integer
    - name: String
    - price: Numeric
    - stock: Integer
    + get_discounted_unit_price(): float
}

class Sale {
    - saleID: Integer
    - userID: Integer
    - totalAmount: Numeric
    - status: String
    + user: User
    + items: List<SaleItem>
    + payments: List<Payment>
}

class SaleItem {
    - saleItemID: Integer
    - quantity: Integer
    - subtotal: Numeric
    + sale: Sale
    + product: Product
}

class Payment {
    - paymentID: Integer
    - amount: Numeric
    - status: String
    + authorized(): bool
}

class Cash {
    - cash_tendered: Numeric
}

class Card {
    - card_number: String
    - card_type: String
    + authorized(): bool
}

' Quality Tactics Manager
class QualityTacticsManager {
    - circuit_breaker: CircuitBreaker
    - security: SecurityManager
    - throttling: ThrottlingManager
    - order_queue: OrderQueueManager
    + execute_with_circuit_breaker(): bool
    + authenticate_partner(): bool
    + throttle_request(): bool
    + enqueue_order(): bool
}

' Key Quality Tactics Models
class CircuitBreakerState {
    - service_name: String
    - state: String
    - failure_count: Integer
    - failure_threshold: Integer
}

class OrderQueue {
    - queueID: Integer
    - saleID: Integer
    - priority: Integer
    - status: String
}

class FeatureToggle {
    - feature_name: String
    - is_enabled: Boolean
    - rollout_percentage: Integer
}

class FlashSale {
    - flashSaleID: Integer
    - productID: Integer
    - start_time: DateTime
    - end_time: DateTime
    - discount_percent: Numeric
    - max_quantity: Integer
    + is_active(): bool
}

class Partner {
    - partnerID: Integer
    - name: String
    - api_endpoint: String
    - status: String
}

class PartnerAPIKey {
    - keyID: Integer
    - partnerID: Integer
    - api_key: String
    - is_active: Boolean
    + partner: Partner
}

class AuditLog {
    - auditID: Integer
    - event_type: String
    - entity_type: String
    - action: String
    - timestamp: DateTime
    - success: Boolean
}

class SystemMetrics {
    - metricID: Integer
    - metric_name: String
    - metric_value: Numeric
    - timestamp: DateTime
}

' Relationships
User ||--o{ Sale : "has"
Sale ||--o{ SaleItem : "contains"
Sale ||--o{ Payment : "has"
Payment <|-- Cash : "extends"
Payment <|-- Card : "extends"

QualityTacticsManager ||--|| CircuitBreakerState : "uses"
QualityTacticsManager ||--o{ OrderQueue : "manages"
QualityTacticsManager ||--o{ FeatureToggle : "manages"

Product ||--o{ FlashSale : "has"
Partner ||--o{ PartnerAPIKey : "has"

QualityTacticsManager ||--o{ AuditLog : "manages"
QualityTacticsManager ||--o{ SystemMetrics : "manages"

note right of QualityTacticsManager
  Quality Tactics Manager
  - Central coordinator
  - Implements 14+ tactics
  - Provides unified interface
end note

note right of CircuitBreakerState
  Circuit Breaker State
  - Tracks service health
  - Prevents cascading failures
  - Enables graceful degradation
end note

@enduml
